What happens when you initialize a repository? Why do you need to do it?

    Git starts tracking the changes that you make in the directory "git
    init" is ran. This allows us to commit changes we make later on.

How is the staging area different from the working directory and the
repository? What value do you think it offers?

	The staging area "stages" files that would be really commited, and
	takes files from the working directory. That makes it so that commits
	can be clearly seen from "git status", and you can see exactly what you
	commit and share in the public.

How can you use the staging area to make sure you have one commit per
logical change?

	The staging area helps to let you review your commmits by diffing the files
	and see if they are really logical changes.

What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

	When I want to add a new feature, but am not sure about really adding
	it, I can put it in a branches, which would help if I were to really add
	the feature, or if I would like to get rid of it.

How do the diagrams help you visualize the branch structure?

	They help by making clearly visible which of the actual branches are 
	associated with, or inherits which other branch.

What is the result of merging two branches together? Why do we represent it
in the diagram the way we do?

	The branches' features mix together. It is represented like that beacause
	that's how it works.
